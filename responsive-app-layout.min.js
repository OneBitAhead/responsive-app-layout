class ResponsiveAppLayout extends HTMLElement{get styles(){return`:host {padding:0}\n        \n.flex-container, :host {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n    align-content: stretch;\n    align-items: stretch;\n}\n\n.flex-container.vertical, :host {\n    flex-direction: column;\n}\n\n.flex-container > * {\n    order: 0;\n    flex: 0 1 auto;\n    align-self: auto;\n}\n\n.flex-container > .stretch, :host > .stretch {\n    flex: 1 1 auto;\n}\t\n\nheader {\n    z-index: 1;\n    background-color: var(--header-background-color, #393939);\n    height: var(--header-height, 48px);\n    min-height: var(--header-height, 48px);\n    line-height: var(--header-height, 48px);\n    border-bottom: var(--header-border, none);\n    box-shadow: var(--header-box-shadow, none);\n}\n\n.nav-toggle{\n\tdisplay:none;\n}\n\n.wrapper {\n  background-color: var(--main-background-color, inherit);\n}\n\nmain > nav {\n    background-color: var(--sidebar-background-color, #F8F8F8);\n    width: var(--sidebar-width, 200px);\n    min-width: var(--sidebar-width, 200px);\n    transition: margin-left 0.25s ease-in-out;\n    border-right: var(--sidebar-border, none);\n    box-shadow: var(--sidebar-box-shadow, none);\n}\n\nmain > *{\n  overflow-y: auto;\n}\n\nmain {\n    overflow: hidden;\n}\n\n\n/* Responsive Layout */\n@media screen and (max-width: ${this._breakpoint||768}px) {\n\t\n\tmain:not(.open) > nav {\n\t\tmargin-left: calc(-1 * var(--sidebar-width, 200px))\n\t}\n\t\n\t.nav-toggle{\n\t\tdisplay:inline-block;\n\t\tmargin: auto 1em;\n\t\tcolor: var(--toggle-color, #FFFFFF);\n\t\tfont-weight: bold;\n\t\tcursor: pointer;\n\t}\n\n\t/* When body has class .overlap, then the content of .wrapper isn't squeezed while opening the nav */\n\tmain.overlap  > nav {\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\ttop: var(--header-height, 48px);\n\t\tleft: 0;\n\t\tz-index: 3;\n        transform: scale(1);\n        overflow-y: initial;\n\t}\n    \n    /*main:not(.open).overlap > nav:after{\n        content:"";\n        position: absolute;\n        width: 0px;\n        background:transparent;\n        left: 0;\n    }\n\t\n\tmain.open.overlap > nav:after{\n\t\tbackground: rgba(0,0,0, 0.3);\n\t\theight: 100%;\n\t\tcontent:"";\n\t\tposition: absolute;\n\t\tright: calc(-100vw + var(--sidebar-width, 200px));\n        left: var(--sidebar-width, 200px);\n    }*/\n\n    main.overlap.open .wrapper {\n        filter: var(--sidebar-open-main-filter, none);\n    }\t\n}`}get template(){return void 0===this.__template&&(this.__template=document.createElement("template"),this.__template.innerHTML=`<style>${this.styles}</style>\n                <header class="flex-container">\n                    <span class="nav-toggle"><slot name="icon">&#9776;</slot></span>\n                    <slot name="header"></slot>\n                </header>\n                <main class="flex-container stretch ${this.overlap?"overlap":""} ${this.open?"open":""} position-${this._position}">\n                \n                    <nav>\n                        <slot name="sidebar"></slot>\n                    </nav>\n                    \n                    <div class="wrapper stretch">\n                        <slot name="main"></slot>\n                    </div>\n                \n                </main>`),this.__template.content.cloneNode(!0)}constructor(){super(),this._refs={},this._position="left",this._breakpoint=768}get overlap(){return this.hasAttribute("overlap")}set overlap(t){this._setBoolean("overlap",t)}get open(){return this.hasAttribute("open")}set open(t){this._setBoolean("open",t)}get position(){return this._position}set position(t){t!=this._position&&["left","right"].indexOf(t)>-1&&(this._position=t);let n="left"===this._position;this._refs.main.classList[n?"add":"remove"]("position-left"),this._refs.main.classList[n?"remove":"add"]("position-right")}get breakpoint(){return this._breakpoint}set breakpoint(t){let n=parseInt(t,10);isNaN(n)||n===this._breakpoint||(this._breakpoint=n,this._refs.styleSheet?this._refs.styleSheet.cssText=this.styles:this._refs.innerHTML=this.styles)}_setBoolean(t,n){!1===n||null==n?this.removeAttribute(t):this.setAttribute(t,""),this._refs.main&&this._refs.main.classList[!1===n||null==n?"remove":"add"](t)}connectedCallback(){const t=this.attachShadow({mode:"open"});t.appendChild(this.template),this._refs.toggle=t.querySelector(".nav-toggle"),this._refs.main=t.querySelector("main"),this._refs.styleSheet=t.querySelector("style"),this._refs.toggle&&this._refs.main&&this._refs.toggle.addEventListener("click",t=>{this._setBoolean("open",!this._refs.main.classList.contains("open"))})}static get observedAttributes(){return["overlap","open","position","breakpoint"]}attributeChangedCallback(t,n,e){n!==e&&(this[t]=e)}}window.customElements.define("responsive-app-layout",ResponsiveAppLayout);