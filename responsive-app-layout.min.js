class ResponsiveAppLayout extends HTMLElement{get styles(){return':host{padding:0}.flex-container,:host{display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-content:stretch;align-items:stretch}.flex-container.vertical,:host{flex-direction:column}.flex-container>*{order:0;flex:0 1 auto;align-self:auto}.flex-container>.stretch,:host>.stretch{flex:1 1 auto}header{z-index:1;background-color:var(--header-background-color,#393939);height:var(--header-height,48px);min-height:var(--header-height,48px);line-height:var(--header-height,48px);border-bottom:var(--header-border,none);box-shadow:var(--header-box-shadow,none)}.nav-toggle{display:none}.wrapper{background-color:var(--main-background-color,inherit)}main>nav{background-color:var(--sidebar-background-color,#f8f8f8);width:var(--sidebar-width,200px);min-width:var(--sidebar-width,200px);transition:margin-left .25s ease-in-out;border-right:var(--sidebar-border,none);box-shadow:var(--sidebar-box-shadow,none)}main>*{overflow-y:auto}main{overflow:hidden}@media screen and (max-width:768px){main:not(.open)>nav{margin-left:calc(-1 * var(--sidebar-width,200px))}.nav-toggle{display:inline-block;margin:auto 1em;color:var(--toggle-color,#fff);font-weight:700;cursor:pointer}main.overlap>nav{position:absolute;bottom:0;top:var(--header-height,48px);left:0;z-index:3;transform:scale(1);overflow-y:initial}main.overlap.open .wrapper{filter:var(--sidebar-open-main-filter, none)}}'}get template(){return void 0===this.__template&&(this.__template=document.createElement("template"),this.__template.innerHTML=`<style>${this.styles}</style>\n<header class="flex-container">\n<span class="nav-toggle"><slot name="icon">&#9776;</slot></span>\n<slot name="header"></slot>\n</header>\n<main class="flex-container stretch ${this.overlap?"overlap":""} ${this.open?"open":""}">\n\n<nav>\n<slot name="sidebar"></slot>\n</nav>\n\n<div class="wrapper stretch">\n<slot name="main"></slot>\n</div>\n\n</main>`),this.__template.content.cloneNode(!0)}constructor(){super(),this._refs={}}get overlap(){return this.hasAttribute("overlap")}set overlap(value){this._setBoolean("overlap",value)}get open(){return this.hasAttribute("open")}set open(value){this._setBoolean("open",value)}_setBoolean(name,value){!1===value||null==value?this.removeAttribute(name):this.setAttribute(name,""),this._refs.main&&this._refs.main.classList[!1===value||null==value?"remove":"add"](name)}connectedCallback(){const shadowRoot=this.attachShadow({mode:"open"});shadowRoot.appendChild(this.template),this._refs.toggle=shadowRoot.querySelector(".nav-toggle"),this._refs.main=shadowRoot.querySelector("main"),this._refs.toggle&&this._refs.main&&this._refs.toggle.addEventListener("click",_=>{this._setBoolean("open",!this._refs.main.classList.contains("open"))})}static get observedAttributes(){return["overlap","open"]}attributeChangedCallback(name,o,newValue){o!==newValue&&this._setBoolean(name,!(!1===newValue||null==newValue))}}window.customElements.define("responsive-app-layout",ResponsiveAppLayout);